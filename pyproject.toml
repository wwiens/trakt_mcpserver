[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".pytest_cache",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "S",    # Security (bandit)
    "SIM",  # Simplify
    "TCH",  # Type checking imports
    "PERF", # Performance
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101", # Use of assert (legitimate in tests)
    "S105", # Possible hardcoded password (test data)
    "S106", # Possible hardcoded password passed to function (test data)
    "S603", # subprocess call (legitimate in test fixtures)
    "S607", # Starting process with partial executable path (legitimate in tests)
]
"models.py" = [
    "S105", # token_type = "bearer" is legitimate OAuth config
]
"trakt_client.py" = [
    "S105", # AUTH_TOKEN_FILE = "auth_token.json" is legitimate config
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = [
    "**/*.py"
]
exclude = [
    "**/__pycache__",
    "**/site-packages/**",
    "**/.venv/**",
    "**/venv/**"
]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingTypeStubs = "error"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
reportUnknownArgumentType = "error"
reportGeneralTypeIssues = "error"
reportOptionalMemberAccess = "error"
reportOptionalSubscript = "error"
reportPrivateImportUsage = "error"
reportUnnecessaryTypeIgnoreComment = "none"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryComparison = "error"
reportConstantRedefinition = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportMissingParameterType = "error"
reportMissingReturnType = "error"
reportUnusedImport = "error"
reportUnusedVariable = "error"
reportDuplicateImport = "error"
reportWildcardImportFromLibrary = "error"
reportSelfClsParameterName = "error"
reportImplicitStringConcatenation = "warning"
reportUndefinedVariable = "error"
reportAssertAlwaysTrue = "error"
reportFunctionMemberAccess = "error"
